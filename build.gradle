plugins {
    id 'java'
    id 'io.qameta.allure' version '2.12.0'
}

group = 'ru.ksandrasky'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

def selenideVersion = "6.19.1"
def restAssuredVersion = "5.4.0"
def allureVersion = "2.29.0"
def slf4jVersion = "2.0.7"
def lombokVersion = "1.18.24"

allure {
    report {
        version.set("2.19.0")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.29.0")
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Lombok для тестовых классов
    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

    // Основные библиотеки для тестирования
    testImplementation "org.junit.jupiter:junit-jupiter:5.10.0"
    testImplementation "com.codeborne:selenide:$selenideVersion"
    testImplementation "io.rest-assured:rest-assured:$restAssuredVersion"
    testImplementation "io.rest-assured:json-schema-validator:$restAssuredVersion"
    testImplementation "io.qameta.allure:allure-selenide:$allureVersion"
    testImplementation "io.qameta.allure:allure-rest-assured:$allureVersion"
    testImplementation "org.slf4j:slf4j-simple:$slf4jVersion"
    testImplementation "org.aeonbits.owner:owner:1.0.12"
    testImplementation "com.github.javafaker:javafaker:1.0.2"
    testImplementation "org.assertj:assertj-core:3.24.2"
    testImplementation "org.hamcrest:hamcrest:2.2"
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task jenkins_tests(type: Test) {
    useJUnitPlatform {
        includeTags("Test")
    }
}
